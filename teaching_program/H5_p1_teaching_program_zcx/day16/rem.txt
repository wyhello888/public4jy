由于移动端特殊性，本文讲的是如何使用rem实现自适应，或叫rem响应式布局，通过使用一个脚本就可以rem自适应，
不用再为各种设备宽度不同而烦恼如何实现自适应的问题
rem是相对于根元素<html>，这样就意味着，我们只需要在根元素确定一个px字号，则可以来算出元素的宽高。
1rem=16px(浏览器html的像素，可以设定这个基准值），假如浏览器的html设为64px，则下面的元素则1rem=64px来运算。
著作权归作者所有。
商业转载请联系作者获得授权,非商业转载请注明出处。
链接:http://caibaojian.com/flexible-js.html
来源:http://caibaojian.com

假设我们的设计稿宽是640的，则html的字体大小则被设为64px.则相当于1rem=64px。

假如一个元素的宽是160px,在平时，我们可以采用百分比可以做到自适应，假如使用响应式的话，可能需要设置多个，
比如在320px，输出80px，而在640px输出160px等。


移动web适配利器-rem
rem设置字体大小
　　rem是（font size of the root element），官方解释
现在大部分浏览器IE9+，Firefox、Chrome、Safari、Opera ，如果我们不修改相关的字体配置，都是默认显示font-size是16px即
html {
    font-size:16px;
}
　　那么如果我们想给一个P标签设置12px的字体大小那么用rem来写就是
p {
    font-size: 0.75rem; //12÷16=0.75（rem）
}
rem进行屏幕适配
rem基准值计算
　　关于rem的基准值，也就是上面那个37.5px其实是根据我们所拿到的视觉稿来决定的，主要有以下几点原因：
·由于我们所写出的页面是要在不同的屏幕大小设备上运行的
所以我们在写样式的时候必须要先以一个确定的屏幕来作为参考，这个就由我们拿到的视觉稿来定
假如我们拿到的视觉稿是以iphone6的屏幕为基准设计的
iPhone6的屏幕大小是375px，
rem = window.innerWidth  / 10
　　这样计算出来的rem基准值就是37.5（iphone6的视觉稿）

但是rem也并不是万能的，下面也有一些场景是不适于使用rem的
　　当用作图片或者一些不能缩放的展示时，必须要使用固定的px值，因为缩放可能会导致图片压缩变形等。